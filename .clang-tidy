CheckOptions:
- key: readability-identifier-naming.ClassCase
  value: CamelCase
- key: readability-identifier-naming.ParameterCase
  value: camelBack
- key: readability-identifier-naming.ClassMethodCase
  value: camelBack
- key: readability-identifier-naming.FunctionCase
  value: camelBack
- key: readability-identifier-naming.EnumConstantCase
  value: CamelCase
- key: readability-identifier-naming.LocalVariableCase
  value: camelBack
- key: readability-identifier-naming.PrivateMemberSuffix
  value: _
- key: readability-identifier-naming.EnumCase
  value: CamelCase
- key: readability-identifier-naming.GlobalVariableCase
  value: camelBack
- key: readability-identifier-naming.LocalConstantCase
  value: aNy_CasE
- key: readability-identifier-naming.ProtectedMemberSuffix
  value: _
- key: readability-identifier-naming.ClassMemberCase
  value: camelBack
- key: readability-identifier-naming.MacroDefinitionCase
  value: UPPER_CASE
- key: readability-identifier-naming.GlobalVariablePrefix
  value: g_
- key: readability-identifier-naming.GlobalConstantCase
  value: UPPER_CASE
- key: performance-move-const-arg.CheckTriviallyCopyableMove
  value: false
Checks: '-*,
  -bugprone-argument-comment,
  -bugprone-branch-clone,
  -bugprone-exception-escape,
  -bugprone-infinite-loop,
  -bugprone-lambda-function-name,
  -bugprone-macro-parentheses,
  -bugprone-narrowing-conversions,
  -bugprone-reserved-identifier,
  -bugprone-signed-char-misuse,
  -bugprone-string-integer-assignment,
  -bugprone-suspicious-include,
  -bugprone-use-after-move,
  -cppcoreguidelines-avoid-c-arrays,
  -cppcoreguidelines-avoid-magic-numbers,
  -cppcoreguidelines-avoid-non-const-global-variables,
  -cppcoreguidelines-explicit-virtual-functions,
  -cppcoreguidelines-init-variables,
  -cppcoreguidelines-interfaces-global-init,
  -cppcoreguidelines-macro-usage,
  -cppcoreguidelines-narrowing-conversions,
  -cppcoreguidelines-no-malloc,
  -cppcoreguidelines-non-private-member-variables-in-classes,
  -cppcoreguidelines-owning-memory,
  -cppcoreguidelines-pro-bounds-array-to-pointer-decay,
  -cppcoreguidelines-pro-bounds-constant-array-index,
  -cppcoreguidelines-pro-bounds-pointer-arithmetic,
  -cppcoreguidelines-pro-type-const-cast,
  -cppcoreguidelines-pro-type-cstyle-cast,
  -cppcoreguidelines-pro-type-member-init,
  -cppcoreguidelines-pro-type-reinterpret-cast,
  -cppcoreguidelines-pro-type-static-cast-downcast,
  -cppcoreguidelines-pro-type-union-access,
  -cppcoreguidelines-pro-type-vararg,
  -cppcoreguidelines-special-member-functions,
  -fuchsia-statically-constructed-objects,
  -llvm-namespace-comment,
  -misc-definitions-in-headers,
  -modernize-avoid-bind,
  -modernize-concat-nested-namespaces,
  -modernize-deprecated-headers,
  -modernize-loop-convert,
  -modernize-make-shared,
  -modernize-make-unique,
  -modernize-pass-by-value,
  -modernize-raw-string-literal,
  -modernize-use-auto,
  -modernize-use-default-member-init,
  -modernize-use-emplace,
  -modernize-use-equals-default,
  -modernize-use-equals-delete,
  -modernize-use-nodiscard,
  -modernize-use-nullptr,
  -modernize-use-using,
  -performance-faster-string-find,
  -performance-for-range-copy,
  -performance-implicit-conversion-in-loop,
  -performance-inefficient-algorithm,
  -performance-inefficient-string-concatenation,
  -performance-inefficient-vector-operation,
  -performance-move-const-arg,
  -performance-move-constructor-init,
  -performance-no-automatic-move,
  -performance-no-int-to-ptr,
  -performance-noexcept-move-constructor,
  -performance-trivially-destructible,
  -performance-type-promotion-in-math-fn,
  -performance-unnecessary-copy-initialization,
  -performance-unnecessary-value-param,
  -portability-restrict-system-includes,
  -portability-simd-intrinsics,
  -readability-avoid-const-params-in-decls,
  -readability-braces-around-statements,
  -readability-const-return-type,
  -readability-container-size-empty,
  -readability-convert-member-functions-to-static,
  -readability-deleted-default,
  -readability-else-after-return,
  -readability-function-cognitive-complexity,
  -readability-function-size,
  -readability-identifier-naming,
  -readability-implicit-bool-conversion,
  -readability-inconsistent-declaration-parameter-name,
  -readability-isolate-declaration,
  -readability-magic-numbers,
  -readability-make-member-function-const,
  -readability-named-parameter,
  -readability-non-const-parameter,
  -readability-qualified-auto,
  -readability-redundant-access-specifiers,
  -readability-redundant-control-flow,
  -readability-redundant-declaration,
  -readability-redundant-member-init,
  -readability-redundant-smartptr-get,
  -readability-redundant-string-cstr,
  -readability-redundant-string-init,
  -readability-simplify-boolean-expr,
  -readability-static-accessed-through-instance,
  -readability-static-definition-in-anonymous-namespace,
  -readability-uppercase-literal-suffix,
  -readability-use-anyofallof,
  bugprone-branch-clone,
  bugprone-infinite-loop,
  bugprone-lambda-function-name,
  bugprone-macro-parentheses,
  bugprone-reserved-identifier,
  bugprone-string-integer-assignment,
  cppcoreguidelines-init-variables,
  cppcoreguidelines-no-malloc,
  cppcoreguidelines-pro-type-member-init,
  misc-definitions-in-headers,
  modernize-concat-nested-namespaces,
  modernize-make-shared,
  modernize-make-unique,
  modernize-pass-by-value,
  modernize-use-default-member-init,
  modernize-use-emplace,
  modernize-use-equals-default,
  modernize-use-equals-delete,
  modernize-use-using,
  llvm-namespace-comment,
  performance-faster-string-find,
  performance-for-range-copy,
  performance-inefficient-algorithm,
  performance-move-const-arg,
  performance-move-constructor-init,
  performance-no-automatic-move,
  performance-noexcept-move-constructor,
  performance-unnecessary-copy-initialization,
  performance-unnecessary-value-param,
  readability-avoid-const-params-in-decls,
  readability-convert-member-functions-to-static,
  readability-const-return-type,
  readability-identifier-naming,
  readability-inconsistent-declaration-parameter-name,
  readability-make-member-function-const,
  readability-redundant-declaration,
  readability-static-definition-in-anonymous-namespace,
  arcadia-typeid-name-restriction,
  bugprone-use-after-move,
  performance-implicit-conversion-in-loop,
  readability-identifier-naming'
